{
  "version": 3,
  "sources": ["empty-module:~/models/project.server", "../../../app/routes/projects.tsx"],
  "sourcesContent": ["module.exports = {};", "import { ActionArgs, json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport {  getProjectList } from \"~/models/project.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport async function loader({ request, params }: LoaderArgs) {\n  \n  const userId = await requireUserId(request);\n  console.log('userId:', userId);\n  const data = getProjectList({userId})\n  console.log('data:', data);\n  \n  return json({ userId, data });\n}\n\nexport async function action({ request }: ActionArgs) {\n  \n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  console.log('name:', name);\n  // const ret = await projectCreate({ name, userId});\n  // console.log('ret:', ret);\n  return redirect(`/notes`);\n}\n\nexport default function Project() {\n  const data = useLoaderData<typeof loader>();\n  const [projects, setProjects] = useState(data)\n//   const actionData = useActionData<typeof action>();\n  const nameRef = React.useRef<HTMLTextAreaElement>(null);\n\n//   React.useEffect(() => {\n//     if (actionData?.errors?.title) {\n//       titleRef.current?.focus();\n//     } else if (actionData?.errors?.body) {\n//       bodyRef.current?.focus();\n//     }\n//   }, [actionData]);\n\n\n  return (\n    <div className=\"p-10\">\n      \n      <Form\n        name=\"form1\"\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          <div>{projects}</div>\n          <h2 className=\"text-gray-50\">Nova pasta</h2>\n          <label className=\"flex w-full flex-col gap-1  text-gray-50\">\n            <span>Nome: </span>\n            <input\n              autoFocus\n              ref={nameRef}\n              id=\"name\"\n              name=\"name\"\n              className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n            />\n          </label>\n        </div>\n        <div className=\"text-left mt-3\">\n         \n          <button\n            type=\"submit\"\n            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Salvar\n          </button>{' '}\n          <Link to=\"/notes\" >Cencelar</Link>\n        </div>\n      </Form>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACElB,YAAuB;AAEvB,qBAAgC;AAChC,qBAA8B;AAC9B,IAAAA,gBAAyB;AAqDf;AA7BK,SAAR,UAA2B;AAChC,QAAM,OAAO,cAA6B;AAC1C,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,IAAI;AAE7C,QAAM,UAAgB,aAA4B,IAAI;AAWtD,SACE,mDAAC,SAAI,WAAU,QAEb;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,QAAO;AAAA,MACP,OAAO;AAAA,QACL,SAAS;AAAA,QACT,eAAe;AAAA,QACf,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MAEA;AAAA,2DAAC,SACC;AAAA,6DAAC,SAAK,sBAAN;AAAA;AAAA;AAAA;AAAA,iBAAe;AAAA,UACf,mDAAC,QAAG,WAAU,gBAAe,0BAA7B;AAAA;AAAA;AAAA;AAAA,iBAAuC;AAAA,UACvC,mDAAC,WAAM,WAAU,4CACf;AAAA,+DAAC,UAAK,sBAAN;AAAA;AAAA;AAAA;AAAA,mBAAY;AAAA,YACZ;AAAA,cAAC;AAAA;AAAA,gBACC,WAAS;AAAA,gBACT,KAAK;AAAA,gBACL,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,WAAU;AAAA;AAAA,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,QACA,mDAAC,SAAI,WAAU,kBAEb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAU;AAAA,cACX;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,UAAU;AAAA,UACV,mDAAC,QAAK,IAAG,UAAU,wBAAnB;AAAA;AAAA;AAAA;AAAA,iBAA2B;AAAA,aAR7B;AAAA;AAAA;AAAA;AAAA,eASA;AAAA;AAAA;AAAA,IAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkCA,KApCF;AAAA;AAAA;AAAA;AAAA,SAqCA;AAEJ;",
  "names": ["import_react"]
}
