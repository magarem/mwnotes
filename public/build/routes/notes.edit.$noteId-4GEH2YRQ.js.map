{
  "version": 3,
  "sources": ["../../../app/routes/notes.edit.$noteId.tsx"],
  "sourcesContent": ["import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { useSubmit, Form } from \"react-router-dom\";\nimport { createNote, getNote, updateNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nimport { useState } from \"react\";\nimport { createClient } from '@supabase/supabase-js'\nimport { v4 as uuidv4 } from \"uuid\";\nexport const supabase = createClient('https://lpbqbqcmlspixeiikhcb.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxwYnFicWNtbHNwaXhlaWlraGNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODA2NDU1ODksImV4cCI6MTk5NjIyMTU4OX0.EIGOPYgY4iebJJ1jpJNCoioJZSE9XU83ZPWUhCsgUSk')\n\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const userId = await requireUserId(request);\n  \n\n  const note = await getNote({ userId, id: params.noteId })||{};\n  console.log(11, note);\n  // note.userid = userId\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n}\n\n\nexport async function action({ request }: ActionArgs) {\n\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\");\n  const title = formData.get(\"title\");\n  const tags = formData.get(\"tags\");\n  const body = formData.get(\"body\");\n  let image = formData.get(\"image\");\n  let noimage = formData.get(\"noimage\");\n  console.log(title, body, image, noimage);\n  \n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { title: \"Title is required\", body: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json(\n      { errors: { title: null, body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n \n  const obj: any = { id, title, body, tags, userId }\n  // if (image){\n  //   image = \"https://lpbqbqcmlspixeiikhcb.supabase.co/storage/v1/object/public/files/\" + image\n  //   obj.img = image\n  // }\n\n  obj.img = image\n  console.log(2, noimage);\n  \n  if (noimage==\"true\"){\n    obj.img = \"\"\n  }\n\n  \n  const note = await updateNote(obj);\n  return redirect(`/notes/${note.id}`);\n}\n\nexport default function EditNotePage() {\n\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const idRef = React.useRef<HTMLTextAreaElement>(null);\n  const titleRef = React.useRef<HTMLTextAreaElement>(null);\n  const tagsRef = React.useRef<HTMLTextAreaElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n  const imageRef = React.useRef<HTMLTextAreaElement>(null);\n  const noimageRef = React.useRef<any>('false');\n  const [file, setfile] = useState([]);\n  const [db_fileName, db_setFileName] = useState([]);\n  const submit = useSubmit();\n \n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const handleFileSelected = (e) => {\n    setfile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    console.log(file.length);\n\n    let formData = new FormData();\n\n    formData.set(\"id\", idRef.current.value);\n    formData.set(\"title\", titleRef.current.value);\n    formData.set(\"tags\", tagsRef.current.value);\n    formData.set(\"body\", bodyRef.current.value);\n    formData.set(\"noimage\", noimageRef.current.checked);\n    \n    if (file.length !== 0) {\n      const filename = `${uuidv4()}-${file.name}`;\n      const { data, error } = await supabase.storage\n        .from(\"files\")\n        .upload(filename, file, {\n          cacheControl: \"3600\",\n          upsert: false,\n        });\n\n      const filepath = data.path;\n      formData.set(\"image\", filepath);\n    }\n\n    console.log(noimageRef.current.checked);\n    \n    if (noimageRef.current.checked) {\n      formData.set(\"image\", \"\");\n    }\n   \n    submit(\n      formData, //Notice this change\n      { method: \"post\" }\n    );\n};\n\n  return (\n    <Form\n      name=\"form1\"\n      method=\"post\"\n      // onSubmit={handleSubmit}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <input\n            ref={idRef}\n            hidden\n            name=\"id\"\n            defaultValue={data.note.id}\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n          />\n          <span>Titulo: </span>\n          <input\n            ref={titleRef}\n            id=\"title\"\n            name=\"title\"\n            defaultValue={data.note.title}\n            className=\" text-gray-50 bg-slate-700 border-slate-800 flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <span>Nota: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            defaultValue={data.note.body}\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n       \n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n      {/* <div>\n        <label>\n          <span>Sem imagem: </span>\n          <input ref={noimageRef} type=\"checkbox\" id=\"noimage\" name=\"noimage\" value=\"true\"/>\n        </label>\n      </div> */}\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <span>Tags: </span>\n          <input\n            ref={tagsRef}\n            name=\"tags\"\n            defaultValue={data.note.tags}\n            className=\" text-gray-50 bg-slate-700 border-slate-800 flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n          />\n          {/* <input type=\"file\" name=\"image\" onChange={handleFileSelected} /> */}\n        </label>\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <span>Img: </span>\n          <input\n            ref={imageRef}\n            name=\"image\"\n            defaultValue={data.note.img}\n            className=\" text-gray-50 bg-slate-700 border-slate-800 flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n          />\n          {/* <input type=\"file\" name=\"image\" onChange={handleFileSelected} /> */}\n        </label>\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "_a", "_b", "_c", "_d", "data"]
}
