{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "../app/routes/api.$userid.note.$noteid.show.tsx", "../app/routes/notes.edit.$noteId.tsx", "../app/models/note.server.ts", "../app/routes/notes.$noteId.tsx", "../app/routes/imagemanager.tsx", "../app/components/modal.tsx", "../app/routes/notes._index.tsx", "../app/routes/healthcheck.tsx", "../app/routes/folderNew.tsx", "../app/routes/notes.new.tsx", "../app/routes/projects.tsx", "../app/models/project.server.ts", "../app/routes/showRes.tsx", "../app/routes/_index.tsx", "../app/utils.ts", "../app/routes/login2.tsx", "../app/routes/logout.tsx", "../app/routes/upload.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/routes/join.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl }\n    ,{\n    rel: 'stylesheet',\n    href: 'https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css',\n  },\n  ];\n};\n\nexport async function loader({ request }: LoaderArgs) {\n  return json({\n    user: await getUser(request),\n  });\n}\n\nexport default function App() {\n  return (\n    <html lang=\"en\" >\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full bg-dark\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.SUPABASE_URL_RAW!//'https://jrppesgzrtbbqriuypku.supabase.co'\nconst supabaseKey = process.env.SUPABASE_ANON_KEY!//'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpycHBlc2d6cnRiYnFyaXV5cGt1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODIwMjYwMDksImV4cCI6MTk5NzYwMjAwOX0.mVBmQ2FuHX5r4vfrsllMAVZJrrIb3Bx-HjJWyz3HNCo'//process.env.SUPABASE_KEY\n\nconst supabase = createClient(supabaseUrl, supabaseKey, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false\n  }\n})\n\n// Access auth admin api\nconst adminAuthClient = supabase.auth.admin\n\nexport type { User } from \"@prisma/client\";\n\nexport async function getUserById(id: User[\"id\"]) {\n  console.log('id:', id);\n  \n  return await prisma.user.findUnique({ where: { id } })||[];\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  console.log('email:', email);\n  return await prisma.user.findUnique({ where: { email } });\n}\n\nexport async function createUser(email: User[\"email\"], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  const { data, error } = await supabase.auth.admin.createUser({\n    email: email,\n    password: hashedPassword,\n    user_metadata: { name: 'Yoda' }\n  })\n\n  \n  \n\n  const user = await prisma.user.create({\n    data: {\n      email,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n\n  console.log('user.id:', user.id);\n\n  const { data2, error2 } = await supabase.storage\n  .from('files')\n  .upload(user.id + '/.initial', '', {\n    cacheControl: \"3600\",\n    upsert: false,\n  });\n  \n  // const { data2, error2 } = await supabase\n  // .storage\n  // .createBucket(user.id, {\n  //   public: true,\n  //   allowedMimeTypes: ['image/jpeg', 'image/png', 'image/bmp']\n  // })\n\n  console.log('data2:', data2);\n\n  return user\n}\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import { PrismaClient } from \"@prisma/client\";\nimport { json, LoaderArgs } from \"@remix-run/server-runtime\";\n\nconst prisma = new PrismaClient();\n\nexport const loader = async ({ request, params }: LoaderArgs) => {\n  // Get all Notes\n  // const url = new URL(request.url);\n  // const field = url.searchParams.get(\"id\")\n  console.log('field:', params[\"id\"]);\n  \n  if (params[\"noteid\"]=='all'){\n    const notes = await prisma.note.findMany({where: {userId: params[\"userid\"]}})\n    console.log('notes:', notes);\n    console.log(`Loading...`);\n    await prisma.$disconnect();\n    return json(notes, 200);\n  }else{\n    const notes = await prisma.note.findMany({where: {userId: params[\"userid\"], id: params[\"noteid\"]}})\n    console.log('notes:', notes);\n    console.log(`Loading...`);\n    await prisma.$disconnect();\n    return json(notes, 200);\n  }\n  \n}\n// await prisma.$disconnect();\n\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { useSubmit, Form } from \"react-router-dom\";\nimport { createNote, getNote, updateNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nimport { useState } from \"react\";\nimport { createClient } from '@supabase/supabase-js'\nimport { v4 as uuidv4 } from \"uuid\";\nexport const supabase = createClient('https://lpbqbqcmlspixeiikhcb.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxwYnFicWNtbHNwaXhlaWlraGNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODA2NDU1ODksImV4cCI6MTk5NjIyMTU4OX0.EIGOPYgY4iebJJ1jpJNCoioJZSE9XU83ZPWUhCsgUSk')\n\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const userId = await requireUserId(request);\n  \n\n  const note = await getNote({ userId, id: params.noteId })||{};\n  console.log(11, note);\n  // note.userid = userId\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n}\n\n\nexport async function action({ request }: ActionArgs) {\n\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\");\n  const title = formData.get(\"title\");\n  const tags = formData.get(\"tags\");\n  const body = formData.get(\"body\");\n  let image = formData.get(\"image\");\n  let noimage = formData.get(\"noimage\");\n  console.log(title, body, image, noimage);\n  \n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { title: \"Title is required\", body: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json(\n      { errors: { title: null, body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n \n  const obj: any = { id, title, body, tags, userId }\n  // if (image){\n  //   image = \"https://lpbqbqcmlspixeiikhcb.supabase.co/storage/v1/object/public/files/\" + image\n  //   obj.img = image\n  // }\n\n  obj.img = image\n  console.log(2, noimage);\n  \n  if (noimage==\"true\"){\n    obj.img = \"\"\n  }\n\n  \n  const note = await updateNote(obj);\n  return redirect(`/notes/${note.id}`);\n}\n\nexport default function EditNotePage() {\n\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const idRef = React.useRef<HTMLTextAreaElement>(null);\n  const titleRef = React.useRef<HTMLTextAreaElement>(null);\n  const tagsRef = React.useRef<HTMLTextAreaElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n  const imageRef = React.useRef<HTMLTextAreaElement>(null);\n  const noimageRef = React.useRef<any>('false');\n  const [file, setfile] = useState([]);\n  const [db_fileName, db_setFileName] = useState([]);\n  const submit = useSubmit();\n \n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const handleFileSelected = (e) => {\n    setfile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    console.log(file.length);\n\n    let formData = new FormData();\n\n    formData.set(\"id\", idRef.current.value);\n    formData.set(\"title\", titleRef.current.value);\n    formData.set(\"tags\", tagsRef.current.value);\n    formData.set(\"body\", bodyRef.current.value);\n    formData.set(\"noimage\", noimageRef.current.checked);\n    \n    if (file.length !== 0) {\n      const filename = `${uuidv4()}-${file.name}`;\n      const { data, error } = await supabase.storage\n        .from(\"files\")\n        .upload(filename, file, {\n          cacheControl: \"3600\",\n          upsert: false,\n        });\n\n      const filepath = data.path;\n      formData.set(\"image\", filepath);\n    }\n\n    console.log(noimageRef.current.checked);\n    \n    if (noimageRef.current.checked) {\n      formData.set(\"image\", \"\");\n    }\n   \n    submit(\n      formData, //Notice this change\n      { method: \"post\" }\n    );\n};\n\n  return (\n    <Form\n      name=\"form1\"\n      method=\"post\"\n      // onSubmit={handleSubmit}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <input\n            ref={idRef}\n            hidden\n            name=\"id\"\n            defaultValue={data.note.id}\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n          />\n          <span>Titulo: </span>\n          <input\n            ref={titleRef}\n            id=\"title\"\n            name=\"title\"\n            defaultValue={data.note.title}\n            className=\" text-gray-50 bg-slate-700 border-slate-800 flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <span>Nota: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            defaultValue={data.note.body}\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n       \n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n      {/* <div>\n        <label>\n          <span>Sem imagem: </span>\n          <input ref={noimageRef} type=\"checkbox\" id=\"noimage\" name=\"noimage\" value=\"true\"/>\n        </label>\n      </div> */}\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <span>Tags: </span>\n          <input\n            ref={tagsRef}\n            name=\"tags\"\n            defaultValue={data.note.tags}\n            className=\" text-gray-50 bg-slate-700 border-slate-800 flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n          />\n          {/* <input type=\"file\" name=\"image\" onChange={handleFileSelected} /> */}\n        </label>\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1 text-white\">\n          <span>Img: </span>\n          <input\n            ref={imageRef}\n            name=\"image\"\n            defaultValue={data.note.img}\n            className=\" text-gray-50 bg-slate-700 border-slate-800 flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n          />\n          {/* <input type=\"file\" name=\"image\" onChange={handleFileSelected} /> */}\n        </label>\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import type { User, Note } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\nvar fs = require(\"fs\");\nexport type { Note } from \"@prisma/client\";\n\nexport function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.findFirst({\n    select: { id: true, body: true, img: true, title: true, tags: true },\n    where: { id, userId },\n  });\n}\n\n\nexport async function getFolderListItems({ userId }: { userId: User[\"id\"] }) {\n  console.log('userId', userId);\n  \n  return await prisma.folder.findMany({\n    where: { userId },\n    select: { id: true, name: true },\n    orderBy: { updatedAt: \"desc\" },\n  })||[];\n}\n\n\nexport async function getNoteListItems({ userId }: { userId: User[\"id\"] }) {\n  console.log('userId', userId);\n  \n  return await prisma.note.findMany({\n    where: { userId },\n    select: { id: true, title: true },\n    // include: {\n    //   folder: true,\n    // },\n    orderBy: [ {updatedAt: \"desc\" }],\n  });\n}\n\nexport function updateNote(obj: object & {userId: User[\"id\"]}) {\n  // var writeStream = fs.createWriteStream(\"data/\" + title + \".md\");\n  // writeStream.write(body);\n  // writeStream.write(\"Thank You.\");\n  // writeStream.end();\n  return prisma.note.update({\n    where: {\n      id: obj.id\n    },\n    data: obj\n  })\n}\n\nfunction generateUID() {\n  // I generate the UID from two parts here \n  // to ensure the random number provide enough bits.\n  var firstPart = (Math.random() * 46656) | 0;\n  var secondPart = (Math.random() * 46656) | 0;\n  firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n  secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n  return firstPart + secondPart;\n}\n\nconst geraDate = () => new Date().toLocaleDateString()\n\nfunction adicionaZero(numero){\n  if (numero <= 9) \n      return \"0\" + numero;\n  else\n      return numero; \n}\n\nlet dataAtual = new Date(); //29/01/2020\nlet dataAtualFormatada = (adicionaZero(dataAtual.getDate().toString()) + (adicionaZero(dataAtual.getMonth()+1).toString()) + dataAtual.getFullYear())\nconsole.log(dataAtualFormatada);\n\nconst slugify = str =>\n  str\n  .toString()\n  .normalize('NFD')\n  .replace(/[\\u0300-\\u036f]/g, '')\n  .toLowerCase()\n  .trim()\n  .replace(/\\s+/g, '-')\n  .replace(/[^\\w-]+/g, '')\n  .replace(/--+/g, '-')\n\n\n\n\n\n  export function folderCreate({folderName, userId}: any) {\n    console.log(folderName);\n    return prisma.folder.create({\n      data: {\n        name: folderName,\n        user: {\n          connect: {\n            id: userId,\n          },\n        },\n      },\n    });\n  }\n\n\n\n\n\n\nexport function createNote({\n  body,\n  title,\n  tags,\n  img,\n  userId,\n}: Pick<Note,  \"body\" | \"title\" | \"tags\" | \"img\"> & {\n  userId: User[\"id\"];\n}) {\n\n  // var name = \"data/\" + generateUID() + '_' + dataAtualFormatada + '__' + slugify(title) + \".md\"\n  // console.log(name);\n \n  // var writeStream = fs.createWriteStream(name);\n  // writeStream.write(body);\n  // writeStream.write(\"Thank You.\");\n  // writeStream.end();\n  return prisma.note.create({\n    data: {\n      title,\n      body,\n      tags,\n      img,\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n    },\n  });\n}\n\nexport function deleteNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & { userId: User[\"id\"] }) {\n  return prisma.note.deleteMany({\n    where: { id, userId },\n  });\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\n\nimport { Link } from \"@remix-run/react\"\nimport {\n  Form,\n  isRouteErrorResponse,\n  useLoaderData,\n  useRouteError,\n} from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote, getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useNavigate } from \"@remix-run/react\"\n\nexport async function loader({ request, params }: LoaderArgs) {\n  \n  const env = {\n    SUPABASE_URL_RAW: process.env.SUPABASE_URL_RAW!,\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY!,\n  }\n  \n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  note.userid = userId\n  console.log(note);\n  \n  return json({ userId, note, env });\n}\n\nexport async function action({ request, params }: ActionArgs) {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n}\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData<typeof loader>();\n  const CDNURL = \"\"//  data.env.SUPABASE_URL_RAW + \"storage/v1/object/public/files/\" + data.userId + '/' //\"https://lpbqbqcmlspixeiikhcb.supabase.co/storage/v1/object/public/files\";\n  let navigate = useNavigate()\n\n\n  return (\n    <div className=\"bg-dark text-slate-50\">\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <div dangerouslySetInnerHTML={{__html: data.note.body.replace(/\\n/g, '<br />')}} />\n      <p className=\"py-6\">{data.note.img&&<img src={`${data.note.img}`} alt=\"dd\" style={{width: '100px'}}/>}</p>\n      {/* <hr className=\"my-4\" /> */}\n      <Form method=\"post\">\n        <button type=\"button\" onClick={() => navigate(\"/notes/edit/\" + data.note.id)}\n        className=\"rounded bg-blue-500 px-4 py-1 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >Edit</button>{\" \"}\n        <button\n          type=\"submit\"\n          className=\"rounded bg-red-500  px-4 py-1 text-white hover:bg-red-800 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  if (error instanceof Error) {\n    return <div>An unexpected error occurred: {error.message}</div>;\n  }\n\n  if (!isRouteErrorResponse(error)) {\n    return <h1>Unknown Error</h1>;\n  }\n\n  if (error.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  return <div>An unexpected error occurred: {error.statusText}</div>;\n}\n", "import { useEffect, useState } from 'react';\nimport { useSubmit } from \"react-router-dom\";\nimport { Row, Col, Card, Form, InputGroup, ButtonGroup, Container, DropdownButton, Dropdown } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { createClient } from '@supabase/supabase-js'\nimport { json } from \"@remix-run/node\";\nimport React from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ActionArgs, LoaderArgs, redirect } from '@remix-run/server-runtime';\nimport { getUserId } from \"../session.server\";\nimport  Modal  from \"../components/modal\"\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { TfiHome , TfiArrowCircleLeft, TfiClipboard, TfiArrowCircleRight} from \"react-icons/tfi\";\nimport { FiFolderPlus } from \"react-icons/fi\";\nimport { RiFolderUploadLine } from \"react-icons/ri\";\nimport { createServerClient } from '@supabase/auth-helpers-remix'\n// import type { LoaderArgs } from '@remix-run/node' // change this import to whatever runtime you are using\n\n// const supabase = createClient('https://jrppesgzrtbbqriuypku.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpycHBlc2d6cnRiYnFyaXV5cGt1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODIwMjYwMDksImV4cCI6MTk5NzYwMjAwOX0.mVBmQ2FuHX5r4vfrsllMAVZJrrIb3Bx-HjJWyz3HNCo', {\n//     db: {\n//       schema: 'custom',\n//     },\n//     auth: {\n//       persistSession: true,\n//     },\n//   })\n\n// const supabaseUrl = 'https://jrppesgzrtbbqriuypku.supabase.co'\n// const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpycHBlc2d6cnRiYnFyaXV5cGt1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODIwMjYwMDksImV4cCI6MTk5NzYwMjAwOX0.mVBmQ2FuHX5r4vfrsllMAVZJrrIb3Bx-HjJWyz3HNCo'//process.env.SUPABASE_KEY\n// const supabase = createClient(supabaseUrl, supabaseKey)\n\n\n// export const loader = async ({ request }: LoaderArgs) => {\n//     const response = new Response()\n//     const supabase = createServerClient(\n//       process.env.SUPABASE_URL!,\n//       process.env.SUPABASE_ANON_KEY!,\n//       { request, response }\n//     )\n//     const userId = await getUserId(request);\n//     console.log(\"userID:\", userId);\n    \n//     const {data: { session }} = await supabase.auth.getSession()\n\n//     console.log(\"session:\", session?.user);\n//     // const { data } = await supabaseClient.from('test').select('*')\n//     // \n//     return json(\n//       { userId: userId,\n//         supabase},\n//       {\n//         headers: response.headers,\n//       }\n//     )\n//   }\n\nexport const loader = async ({request}: LoaderArgs) => {\n    const userId = await getUserId(request);\n    const CDNURL = process.env.SUPABASE_URL_RAW;\n   \n    const env = {\n      SUPABASE_URL_RAW: process.env.SUPABASE_URL_RAW!,\n      SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY!,\n    }\n\n    if (!userId) {\n        return redirect(\"/login\");\n      }else{\n        return json({ userId, env, CDNURL })\n      }\n  \n    \n  }\n\n// export async function loader({ request }: LoaderArgs) {\n//     const userId = await getUserId(request);\n//     console.log(1, userId);\n//     return json({userId: userId});\n// }\n\nexport default function imagemanager() {\n    // let submit = useSubmit();\n    const data = useLoaderData<typeof loader>();\n    const [ url, setUrl ] = useState(\"\");\n    const urlRef = React.useRef<HTMLTextAreaElement>(null);\n    const formUploadRef = React.useRef<HTMLTextAreaElement>(null);\n    const fileNewNameRef = React.useRef<HTMLTextAreaElement>(null);\n    const [filesData, setFilesData] = useState([]);\n    const [file, setfile] = useState([]);\n    const [user, setUser] = useState(data.userId);\n    const [urlType, setUrlType] = useState('');\n    const newFolderRef = React.useRef<HTMLTextAreaElement>(null);\n    const uploadTxtRef = React.useRef<HTMLTextAreaElement>(null);\n    const [show, setShow] = useState(false);\n    const [showRenomear, setShowRenomear] = useState(false);\n    const [fileCopyAction, setFileCopyAction] = useState('');\n    const [folderCopyAction, setFolderCopyAction] = useState('');\n    const [selectFile, setSelectFile] = useState('');\n\n    const bucket = 'files'\n\n    const CDNURL = data.env.SUPABASE_URL_RAW + '/storage/v1/object/public/files'\n    const supabase = createClient(data.env.SUPABASE_URL_RAW, data.env.SUPABASE_ANON_KEY, {\n        db: {\n            schema: 'custom',\n        },\n        auth: {\n            persistSession: true,\n        },\n    })\n\n    useEffect(() => {\n        // setUser(data.userId);\n        list_files(\"\",\"\")\n    },[])\n\n    useEffect(() => {\n        // alert('!')\n        console.log(url);\n        (urlRef as any).current.value = url\n        \n         // if (url[0]=='/') setUrl(url.substring(1))\n        // list_files(url)\n    },[url])\n\n    const handleFileSelected = (e) => {\n        setfile(e.target.files[0]);\n        console.log(\"!\");\n        // submit(formUploadRef)\n    };\n\n    const list_files = async (url_: any, folder: any) => {\n        setUrl('')\n        console.log(user, url_, folder);\n        setFilesData([])\n       \n        let target\n        if (url_==''&&folder==''){\n            target = user\n        }\n        if (url_==''&&folder!==''){\n            setUrl(folder)\n            target = user + '/' + folder\n        }\n        if (url_!==''&&folder!==''){\n            setUrl(url_ + '/' + folder)\n            target =  user + '/' + url_ + '/' + folder\n        }\n\n        \n        \n        // url = user + '/' + url\n        // a = a.replace(\"//\",\"/\")\n       \n        // let url_ =  '/' + a\n        \n        // if (url_=='/'){\n        //     url_ = ''\n        // }\n\n        // setUrl(a)\n        console.log('target:', target);\n        \n        // setUrl(url);\n    \n        // let url_ = user + a\n        // if (url_[0]=='/') url_ = url_.substring(1)\n        const { data, error } = await supabase\n          .storage\n          .from(bucket)\n          .list(target, {\n            limit: 100,\n            offset: 0,\n            sortBy: { column: 'name', order: 'asc' }\n          })\n        console.log(data);\n        setFilesData(data)\n    }\n    \n    const handleSubmit = async (e: any) => {\n        e.preventDefault();\n        const filename = `${uuidv4()}-${file.name}`;\n        const { data, error } = await supabase.storage\n          .from(bucket)\n          .upload(user + '/' + url + '/' + filename, file, {\n            cacheControl: \"3600\",\n            upsert: false,\n          });\n          list_files('', url)\n          setShow(false)\n    };\n\n    const handleSubmit_rename = async (e: any) => {\n        e.preventDefault();\n        let url_ = url\n        let a = url_.split('/')\n        a.pop()\n        let b = a.join('/')\n\n        let bb = url\n        let cc = b + '/' + fileNewNameRef.current?.value\n\n        console.log('rename:', bb, cc);\n        console.log(user + '/' + bb, user + '/' + cc);\n        \n        let origem = (bb[0]=='/')? user + bb : user + '/' + bb\n        let destino = (cc[0]=='/')? user + cc : user + '/' + cc\n        \n        const { data, error } = await supabase\n            .storage\n            .from(bucket)\n            .move(origem, destino)\n            console.log(error);\n        setShowRenomear(false)\n        setUrl(cc)\n        // list_files(bb, cc)\n    };\n\n    const newFolder = async (name) => {\n        const { data, error } = await supabase.storage\n          .from(bucket)\n          .upload(user + '/' + url + '/' + name + '/.initial', '', {\n            cacheControl: \"3600\",\n            upsert: false,\n          });\n          list_files('', url)\n    }\n\n    const deleteFolder = async ()  => {\n        console.log('::', user + url + '/*');\n        if (confirm('Confirma exclus\u00E3o da pasta:' + url)){\n            const { data, error } = await supabase\n            .storage\n            .from(bucket)\n            .remove([user + '/' + url + '/.initial'])\n            console.log(data, error);\n            if(error) {\n            alert(error);\n            } else {\n            back()\n            }\n        }   \n    }\n\n    const deleteImage = async (imageName)  => {\n        console.log(imageName);\n        if (confirm('Confirma exclus\u00E3o do arquivo:' + imageName)){\n          const { data, error } = await supabase\n        .storage\n        .from(bucket)\n        .remove([user + url])\n      \n        // const { data, error } = await supabase\n        //   .storage\n        //   .from('files')\n        //   .remove(['005df6c1-5a87-4594-a00e-f2e10f6ef6f0-vestido-casual-16.jpg'])\n        console.log(data, error);\n        \n        if(error) {\n          alert(error);\n        } else {\n        // let a = url.split('/').pop()\n        // alert(a)\n        back()\n        // setUrl(a.join('/'))\n        //   list_files(user);\n        }\n        }\n        \n    }\n\n    const copy = async () => {\n        await navigator.clipboard.writeText(url);\n        alert('Text copied');\n    }\n\n    const handleClick = event => {\n        if (event.detail === 2) {\n          console.log('double click');\n        }\n      };\n      \n    const goUrl = async () => {\n        // console.log(\"!\");\n        (urlRef as any).current.value = ''\n        setUrl(urlRef.current.value)\n        // if (url[0]=='/') setUrl(url.substring(1))\n        // list_files()\n    }\n\n    const goHome = async () => {\n        (urlRef as any).current.value = ''\n        // setUrl(\"\")\n        setUrlType('folder')\n        list_files(\"\",\"\")\n    }\n\n    const back = async () => {\n        let a = url.split('/')\n        let b = a.slice(0,-1).join('/')\n        // setUrl(b)\n        list_files('', b)\n        setUrlType('folder')\n    }\n\n    const goNewFolder = () => {\n       let a = prompt(\"Nome da pasta\")\n       newFolder(a)\n    }\n\n    const goDelete = () => {\n        deleteImage(url)\n    }\n\n    const goUpload = () => {\n        setShow(true)\n        console.log(show);    \n    }\n\n    const folderCopyDo = async () => {\n       \n        // let fileCopyAction_ = fileCopyAction\n        // let fileName = fileCopyAction_.split('/').pop()\n        console.log('folderCopyDo:', user + '/' + folderCopyAction, user + '/' + url);  \n        const { data, error } = await supabase\n            .storage\n            .from(bucket)\n            .copy(user + '/' + folderCopyAction, user + '/' + url)\n            console.log(error);\n            setFolderCopyAction('')\n            list_files('', url)\n    }\n\n    const fileCopyDo = async () => {\n       \n        let fileCopyAction_ = fileCopyAction\n        let fileName = fileCopyAction_.split('/').pop()\n        console.log('fileCopyDo:', user + fileCopyAction, user + '/' + url + '/' + fileName);  \n        const { data, error } = await supabase\n            .storage\n            .from(bucket)\n            .copy(user + fileCopyAction, user + '/' + url + '/' + fileName)\n            console.log(error);\n            setFileCopyAction('')\n            list_files('', url)\n    }\n\n    const movePaste = async () => {\n        let selectFile_ = selectFile\n        let fileName = selectFile_.split('/').pop()\n        console.log(user + selectFile, user + url + '/' + fileName);\n        \n        const { data, error } = await supabase\n            .storage\n            .from(bucket)\n            .move(user + selectFile, user + '/' + url + '/' + fileName)\n            console.log(error);\n            setSelectFile('')\n            list_files('', url)\n    }\n\n    return (\n        <div>\n            \n            <div className=' text-white pt-10 pb-2 text-center' style={{width: '80%', margin: 'auto'}}>\n                <h4>Gerenciador de arquivos</h4>\n                {/* user: {user} url: {url} bucket: {bucket}<br/>\n                selectFile:{selectFile} fileCopyAction: {fileCopyAction}<br/>\n                folderCopyAction: {folderCopyAction} */}\n\n            </div>\n            \n            {/* <h1>File manager</h1>{url}[{urlType}]<br/> */}\n            {/* <Modal title=\"Copiar arquivo\" show={showCopiar} setShow={setShowCopiar} showFooterButtons={false}>\n                <Form\n                   \n                    name=\"form_copiar\"\n                    method=\"post\"\n                    onSubmit={handleSubmit_copy}\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: 8,\n                        width: \"100%\",\n                    }}\n                    >\n                    <div>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Digite o novo nome</Form.Label>\n                            <Form.Control type=\"text\" ref={fileNewNameRef} defaultValue={url.split('/').pop()}  name=\"fileNewName\"/>\n                        </Form.Group>\n                        <button\n                            type=\"submit\"\n                            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n                            >\n                            Renomear arquivo\n                        </button>\n                    </div>\n                </Form>\n            </Modal> */}\n            <Modal title=\"Renomear arquivo\" show={showRenomear} setShow={setShowRenomear} showFooterButtons={false}>\n                <Form\n                   \n                    name=\"form_rename\"\n                    method=\"post\"\n                    onSubmit={handleSubmit_rename}\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: 8,\n                        width: \"100%\",\n                    }}\n                    >\n                    <div>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Digite o novo nome</Form.Label>\n                            <Form.Control type=\"text\" ref={fileNewNameRef} defaultValue={url.split('/').pop()}  name=\"fileNewName\"/>\n                        </Form.Group>\n                        <button\n                            type=\"submit\"\n                            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n                            >\n                            Renomear arquivo\n                        </button>\n                    </div>\n                </Form>\n            </Modal>\n            <Modal title=\"Enviar arquivo\" show={show} setShow={setShow} showFooterButtons={false}>\n                <Form\n                    ref={formUploadRef}\n                    name=\"form1\"\n                    method=\"post\"\n                    onSubmit={handleSubmit}\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: 8,\n                        width: \"100%\",\n                    }}\n                    >\n                    <div>\n                        {/* Nova pasta: <input type=\"text\" ref={newFolderRef} name=\"newfolder\" />\n                        <button\n                            onClick={()=>{newFolder()}}\n                            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n                            >\n                            Nova pasta\n                        </button> */}\n                        <Form.Group controlId=\"formFileSm\" className=\"mb-3\">\n                          {/* <Form.Label>Upload</Form.Label> */}\n                          <Form.Control type=\"file\" size=\"sm\" name=\"image\" onChange={(event)=>handleFileSelected(event)} accept=\"image\"/>\n                        </Form.Group>\n                        {/* <label className=\"flex w-full flex-col gap-1\">\n                        <span>Img: </span>\n                        <input type=\"file\"  />\n                        </label> */}\n                        <button\n                            type=\"submit\"\n                            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n                            >\n                            Enviar arquivo\n                        </button>\n                    </div>\n                </Form>\n            </Modal>\n            {/* <Button variant=\"primary\" onClick={()=>teste()}>\n              vai!\n            </Button> */}\n            \n            {uploadTxtRef.current?.value}\n            <div style={{width: '80%', margin: 'auto', marginTop: '10px'}}>\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Text>\n                        <Button variant=\"primary\" onClick={() => goHome()}>\n                          <TfiHome/>\n                        </Button>\n                    </InputGroup.Text>\n                    <InputGroup.Text>\n                        <Button variant=\"primary\" onClick={() => back()}>\n                            <TfiArrowCircleLeft/>\n                        </Button>\n                    </InputGroup.Text>\n                    <Form.Control\n                        name=\"url\" \n                        ref={urlRef}\n                        defaultValue={url}\n                    /> \n                    \n                    <InputGroup.Text>\n                        <Button variant=\"primary\" onClick={() => goUrl()}>\n                            <TfiArrowCircleRight/>\n                        </Button>\n                    </InputGroup.Text>\n\n                    {(urlType==\"img\")&&\n                        <InputGroup.Text>\n                            <Button variant=\"primary\" onClick={() =>  navigator.clipboard.writeText(data.env.SUPABASE_URL_RAW + '/storage/v1/object/public/files/' + user + '/' + urlRef.current.value)}>\n                                <TfiClipboard/>\n                            </Button>\n                        </InputGroup.Text>\n                    }\n                    {(urlType==\"folder\"||url==\"\"||url==\"/\")&&\n                        <DropdownButton\n                        as={ButtonGroup}\n                        title=\"Comandos\"\n                        id=\"bg-vertical-dropdown-1\"\n                        >\n                        {/* {folderCopyAction?\n                            <Dropdown.Item eventKey=\"5\" onClick={() => folderCopyDo()}>Colar pasta</Dropdown.Item>\n                            :\n                            <Dropdown.Item eventKey=\"5\" onClick={() => setFolderCopyAction(url)}>Copiar pasta</Dropdown.Item>\n                        }  */}\n\n                        {urlType==\"folder\"&&fileCopyAction&&\n                            <Dropdown.Item eventKey=\"3\" onClick={() => fileCopyDo()}>Colar</Dropdown.Item>\n                        }\n                        \n                        {urlType==\"folder\"&&selectFile&&\n                            <Dropdown.Item eventKey=\"3\" onClick={() => movePaste()}>Colar</Dropdown.Item>\n                        }\n\n                        <Dropdown.Item eventKey=\"1\" onClick={() => goNewFolder()}>Nova pasta</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\" onClick={() => goUpload()}>Enviar arquivo</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\" onClick={() => deleteFolder()}>Excluir pasta</Dropdown.Item>\n                        </DropdownButton>\n                    }\n                    {(urlType==\"img\")&&\n                        <DropdownButton\n                            as={ButtonGroup}\n                            title=\"Comandos\"\n                            id=\"bg-vertical-dropdown-1\"\n                        >\n                            <Dropdown.Item eventKey=\"4\" onClick={() => setShowRenomear(true)}>Renomear arquivo</Dropdown.Item>\n                            {!fileCopyAction&&\n                                <Dropdown.Item eventKey=\"5\" onClick={() => setFileCopyAction(url)}>Copiar arquivo</Dropdown.Item>\n                            }\n                            {!selectFile&&\n                                <Dropdown.Item eventKey=\"6\" onClick={() => setSelectFile(url)}>Cortar arquivo</Dropdown.Item>\n                            }\n                            <Dropdown.Item eventKey=\"6\" onClick={() => goDelete()}>Excluir arquivo</Dropdown.Item>\n                        </DropdownButton>\n                    }\n                </InputGroup>\n                <br/>\n                {/* {urlType==\"folder\"&&fileCopyAction&&\n                    <Button variant=\"secondary\" onClick={() => fileCopyDo()}>\n                        Colar\n                    </Button>\n                }\n\n                {urlType==\"folder\"&&selectFile&&\n                    <Button  variant=\"secondary\" onClick={() => movePaste()}>\n                        Colar\n                    </Button>\n                } */}\n\n                <Row xs={1} md={4} className=\"g-4\">\n                {urlType!=='img'&&filesData.filter((x)=>!x.name.includes('undefined')&&x.name!=='.initial').map((image) => {\n                    return (\n                    <Col key={CDNURL + \"/\" + image.name}>\n                     {!image.id?\n                            <Card style={{backgroundColor: '#19376D'}} onClick={() => { setUrlType('folder'); list_files(url, image.name)}}>\n                                {/* <Card.Img variant=\"top\" src=\"/img/folder2.png\" style={{width: '50', height: '30'}} onClick={() => {setUrl(url + '/' + image.name); }} /> */}\n                                <Card.Body>\n                                {/* <Button onClick={() => { setUrlType('folder'); list_files(url, image.name)}}> */}\n                                    <img src=\"/img/folder2.png\"  alt=\"\"/>\n                                {/* </Button> */}\n                                   \n                                    <InputGroup className=\"mb-3 pl-2\" style={{color: 'white'}}>\n                                        {image.name}\n                                        {/* <InputGroup.Text id=\"basic-addon1\">{image.name}</InputGroup.Text> */}\n                                    </InputGroup>   \n                                    {/* <Button key={CDNURL + \"/\" + image.name} variant=\"danger\" onClick={() => deleteImage(image.name)}>Delete Image</Button> */}\n                                </Card.Body>\n                            </Card>\n                        :\n                        <Card>\n                            <Card.Img variant=\"top\" style={{width: '50vw', height: '38vh', objectFit: 'cover'}} src={CDNURL + \"/\" + user + '/' + url + '/' + image.name} onClick={() => {setUrlType('img'); setUrl(url + '/' + image.name)}} />\n                            {/* <Card.Body> */}\n                                {/* <InputGroup className=\"mb-3\">\n                                    <InputGroup.Text id=\"basic-addon1\">URL</InputGroup.Text>\n                                        <Form.Control\n                                            name=\"url\"\n                                            defaultValue={`${image.name}`}\n                                        />\n                                </InputGroup>    */}\n                                {/* <Button key={CDNURL + \"/\" + image.name} variant=\"danger\" onClick={() => deleteImage(image.name)}>Delete Image</Button> */}\n                            {/* </Card.Body> */}\n                        </Card>\n                     }\n                    </Col>\n                    )\n                })}\n                </Row>\n                <div>\n                {urlType=='img'&&\n                    <>\n                    {/* <div className='w-100 d-flex justify-content-center mb-3'>\n                    <ButtonGroup aria-label=\"Basic example\">\n                        <Button variant=\"secondary\" onClick={() => setShowRenomear(true)}>\n                            Renomear\n                        </Button>\n                        {!fileCopyAction&&\n                        <Button  variant=\"secondary\" onClick={() => setFileCopyAction(url)}>\n                            Copiar\n                        </Button>\n                        }\n                        {!selectFile&&\n                        <Button  variant=\"secondary\" onClick={() => setSelectFile(url)}>\n                            Cortar\n                        </Button>\n                        }\n                        <Button variant=\"danger\" onClick={() => goDelete()}>\n                            Excluir  \n                        </Button>\n                    </ButtonGroup>\n                    </div> */}\n                        \n                        <div className='w-100 d-flex justify-content-center mt-2 mb-4'>\n                            <img src={CDNURL + \"/\" +user + '/' + url} />\n                        </div>\n                        \n\n                    </>\n                }\n                </div>\n\n\n                \n            </div>\n        </div>\n    )\n}", "import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Example({ title, children, show, setShow, showFooterButtons}) {\n  \n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      \n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        {children}\n        </Modal.Body>\n        {showFooterButtons&&\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n        }\n      </Modal>\n    </>\n  );\n}\nexport default Example", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      Selecione uma nota, ou{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        crie uma nova.\n      </Link>\n    </p>\n  );\n}\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderArgs } from \"@remix-run/node\";\n\nimport { prisma } from \"~/db.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      prisma.user.count(),\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n}\n", "import { ActionArgs, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { folderCreate } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nimport { useState } from \"react\";\nimport { createClient } from '@supabase/supabase-js'\nimport { v4 as uuidv4 } from \"uuid\";\n// import { Col, Card, Button, Row } from \"react-bootstrap\";\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col, Card } from \"react-bootstrap\";\n// import Row from \"react-bootstrap/esm/Row\";\n// import { Col, Card } from \"react-bootstrap\";\nconst CDNURL = \"https://lpbqbqcmlspixeiikhcb.supabase.co/storage/v1/object/public/files/\";\nexport const supabase = createClient('https://lpbqbqcmlspixeiikhcb.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxwYnFicWNtbHNwaXhlaWlraGNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODA2NDU1ODksImV4cCI6MTk5NjIyMTU4OX0.EIGOPYgY4iebJJ1jpJNCoioJZSE9XU83ZPWUhCsgUSk')\n\n\nexport async function action({ request }: ActionArgs) {\n  \n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const folderName = formData.get(\"folderName\");\n  console.log('folderName:', folderName);\n  const ret = await folderCreate({ folderName, userId});\n  console.log('ret:', ret);\n  return redirect(`/notes`);\n}\n\nexport default function NewNotePage() {\n\n//   const actionData = useActionData<typeof action>();\n  const folderNameRef = React.useRef<HTMLTextAreaElement>(null);\n\n//   React.useEffect(() => {\n//     if (actionData?.errors?.title) {\n//       titleRef.current?.focus();\n//     } else if (actionData?.errors?.body) {\n//       bodyRef.current?.focus();\n//     }\n//   }, [actionData]);\n\n\n  const folderNew = async () => {\n    try {\n      const config = {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(data)\n      }\n      const response = await fetch('url', config)\n      //const json = await response.json()\n      if (response.ok) {\n          //return json\n          return response\n      } else {\n          //\n      }\n  } catch (error) {\n          //\n  }\n  }\n\n  return (\n    <div className=\"p-10\">\n      <Form\n        name=\"form1\"\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          <h2 className=\"text-gray-50\">Nova pasta</h2>\n          <label className=\"flex w-full flex-col gap-1  text-gray-50\">\n            <span>Nome: </span>\n            <input\n              autoFocus\n              ref={folderNameRef}\n              id=\"folderName\"\n              name=\"folderName\"\n              className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n            />\n          </label>\n        </div>\n        <div className=\"text-left mt-3\">\n         \n          <button\n            type=\"submit\"\n            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Salvar\n          </button>{' '}\n          <Link to=\"/notes\" >Cencelar</Link>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { useSubmit, Form } from \"react-router-dom\";\nimport { createNote, getFolderListItems, getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nimport { useState } from \"react\";\nimport { createClient } from '@supabase/supabase-js'\nimport { v4 as uuidv4 } from \"uuid\";\n// import { Col, Card, Button, Row } from \"react-bootstrap\";\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport invariant from \"tiny-invariant\";\n// import Row from \"react-bootstrap/esm/Row\";\n// import { Col, Card } from \"react-bootstrap\";\nconst CDNURL = \"https://lpbqbqcmlspixeiikhcb.supabase.co/storage/v1/object/public/files/\";\nexport const supabase = createClient('https://lpbqbqcmlspixeiikhcb.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxwYnFicWNtbHNwaXhlaWlraGNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODA2NDU1ODksImV4cCI6MTk5NjIyMTU4OX0.EIGOPYgY4iebJJ1jpJNCoioJZSE9XU83ZPWUhCsgUSk')\n\n\nexport async function loader({ request, params }: LoaderArgs) {\n  \n  const env = {\n    SUPABASE_URL_RAW: process.env.SUPABASE_URL_RAW!,\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY!,\n  }\n  \n  const userId = await requireUserId(request);\n  // invariant(params.noteId, \"noteId not found\");\n\n  // const folders = await getFolderListItems({ userId });\n  \n  // console.log('folders:', folders);\n\n  return json({ env });\n}\n\n\nexport async function action({ request }: ActionArgs) {\n\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  // const folder = formData.get(\"folder\");\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n  const tags = formData.get(\"tags\");\n  const image = formData.get(\"image\");\n  console.log(title, body, image);\n  \n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { title: \"Title is required\", body: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json(\n      { errors: { title: null, body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n  // img = \"https://lpbqbqcmlspixeiikhcb.supabase.co/storage/v1/object/public/files/\" + image\n  const note = await createNote({ title, body, img:image, tags, userId });\n\n  return redirect(`/notes/${note.id}`);\n}\n\nexport default function NewNotePage() {\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const titleRef = React.useRef<HTMLTextAreaElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n  const tagsRef = React.useRef<HTMLTextAreaElement>(null);\n  const imageRef = React.useRef<HTMLTextAreaElement>(null);\n  const [file, setfile] = useState([]);\n  const [filesData, setFilesData] = useState([]);\n  const [db_fileName, db_setFileName] = useState([]);\n  const submit = useSubmit();\n\n\n  // console.log('data:', data.folders);\n  \n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n\n  const folderNew = async () => {\n    try {\n      const config = {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(data)\n      }\n      const response = await fetch('url', config)\n      //const json = await response.json()\n      if (response.ok) {\n          //return json\n          return response\n      } else {\n          //\n      }\n  } catch (error) {\n          //\n  }\n  }\n\n  return (\n    <div>\n      <Form\n        name=\"form1\"\n        method=\"post\"\n        // onSubmit={handleSubmit}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          {/* <label className=\"flex w-full flex-col gap-1  text-gray-50\"> */}\n            {/* <label htmlFor=\"folder\" className=\"flex w-full flex-col gap-1  text-gray-50\">Pasta\n            <select id=\"folder\" name=\"folder\" className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\">\n             {data.folders.map((item: any)=>\n              <option key={item.id} value={item.id}>{item.name}</option>\n             )}\n            </select>\n            </label> */}\n            <label htmlFor=\"title\" className=\"flex w-full flex-col gap-1  text-gray-50\">Titulo: \n            <input\n              autoFocus\n              ref={titleRef}\n              id=\"title\"\n              name=\"title\"\n              className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n              aria-invalid={actionData?.errors?.title ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.title ? \"title-error\" : undefined\n              }\n            />\n          </label>\n        </div>\n        <div>\n          <label className=\"flex w-full flex-col gap-1  text-gray-50\">\n            <span>Texto: </span>\n            <textarea\n              ref={bodyRef}\n              name=\"body\"\n              rows={8}\n              className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n              aria-invalid={actionData?.errors?.body ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.body ? \"body-error\" : undefined\n              }\n            />\n          </label>\n         \n        </div>\n        <div>\n        <label htmlFor=\"tags\" className=\"flex w-full flex-col gap-1  text-gray-50\">Marcadores: \n            <input\n              autoFocus\n              ref={tagsRef}\n              id=\"tags\"\n              name=\"tags\"\n              className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n              aria-invalid={actionData?.errors?.title ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.title ? \"title-error\" : undefined\n              }\n            />\n          </label>\n        </div>\n        <div>\n        <label className=\"flex w-full flex-col gap-1  text-gray-50\">\n          <span>Imagem: </span>\n          <input\n            ref={imageRef}\n            name=\"image\"\n            className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n          />\n        </label>\n      </div>\n\n        {/* <div>\n          <label className=\"flex w-full flex-col gap-1\">\n            <span>Img: </span>\n            <input type=\"file\" name=\"image\" onChange={handleFileSelected} />\n          </label>\n        </div> */}\n\n        <div className=\"text-left mt-3\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Salvar\n          </button>\n          \n        </div>\n      \n      </Form>\n      {/* <div style={{width: '80%', margin: 'auto', marginTop: '100px'}}>\n            <Row xs={1} md={4} className=\"g-4\">\n              {filesData.filter((x)=>!x.name.includes('undefined')).map((image) => {\n                return (\n                  <Col key={CDNURL + \"/\" + image.name}>\n                    <Card >\n                      <Card.Img variant=\"top\" src={CDNURL + \"/\" + image.name} />\n                      <Card.Body>\n                        <Button key={CDNURL + \"/\" + image.name} variant=\"danger\" onClick={() => deleteImage(image.name)}>Delete Image</Button>\n                       </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n            \n        </div> */}\n    </div>\n  );\n}\n", "import { ActionArgs, json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport {  getProjectList } from \"~/models/project.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport async function loader({ request, params }: LoaderArgs) {\n  \n  const userId = await requireUserId(request);\n  console.log('userId:', userId);\n  const data = getProjectList({userId})\n  console.log('data:', data);\n  \n  return json({ userId, data });\n}\n\nexport async function action({ request }: ActionArgs) {\n  \n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  console.log('name:', name);\n  // const ret = await projectCreate({ name, userId});\n  // console.log('ret:', ret);\n  return redirect(`/notes`);\n}\n\nexport default function Project() {\n  const data = useLoaderData<typeof loader>();\n  const [projects, setProjects] = useState(data)\n//   const actionData = useActionData<typeof action>();\n  const nameRef = React.useRef<HTMLTextAreaElement>(null);\n\n//   React.useEffect(() => {\n//     if (actionData?.errors?.title) {\n//       titleRef.current?.focus();\n//     } else if (actionData?.errors?.body) {\n//       bodyRef.current?.focus();\n//     }\n//   }, [actionData]);\n\n\n  return (\n    <div className=\"p-10\">\n      \n      <Form\n        name=\"form1\"\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          <div>{projects}</div>\n          <h2 className=\"text-gray-50\">Nova pasta</h2>\n          <label className=\"flex w-full flex-col gap-1  text-gray-50\">\n            <span>Nome: </span>\n            <input\n              autoFocus\n              ref={nameRef}\n              id=\"name\"\n              name=\"name\"\n              className=\"w-full flex-1 rounded-md border-0 text-gray-50 bg-slate-700 border-slate-800 px-2 py-2 !outline-none text-lg leading-6\"\n            />\n          </label>\n        </div>\n        <div className=\"text-left mt-3\">\n         \n          <button\n            type=\"submit\"\n            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Salvar\n          </button>{' '}\n          <Link to=\"/notes\" >Cencelar</Link>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import type { User } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\n\nexport async function getProjectList({ userId }: { userId: User[\"id\"] }) {\n  console.log('userId', userId);\n  \n  return await prisma.project.findMany({\n    where: { userId },\n    select: { id: true, name: true },\n    orderBy: { updatedAt: \"desc\" },\n  });\n}\n\n\nexport function updateProject(obj: object & {userId: User[\"id\"]}) {\n  // var writeStream = fs.createWriteStream(\"data/\" + title + \".md\");\n  // writeStream.write(body);\n  // writeStream.write(\"Thank You.\");\n  // writeStream.end();\n  return prisma.note.update({\n    where: {\n      id: obj.id\n    },\n    data: obj\n  })\n}\n\nfunction generateUID() {\n  // I generate the UID from two parts here \n  // to ensure the random number provide enough bits.\n  var firstPart = (Math.random() * 46656) | 0;\n  var secondPart = (Math.random() * 46656) | 0;\n  firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n  secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n  return firstPart + secondPart;\n}\n\nconst geraDate = () => new Date().toLocaleDateString()\n\nfunction adicionaZero(numero){\n  if (numero <= 9) \n      return \"0\" + numero;\n  else\n      return numero; \n}\n\nlet dataAtual = new Date(); //29/01/2020\nlet dataAtualFormatada = (adicionaZero(dataAtual.getDate().toString()) + (adicionaZero(dataAtual.getMonth()+1).toString()) + dataAtual.getFullYear())\nconsole.log(dataAtualFormatada);\n\nconst slugify = str =>\n  str\n  .toString()\n  .normalize('NFD')\n  .replace(/[\\u0300-\\u036f]/g, '')\n  .toLowerCase()\n  .trim()\n  .replace(/\\s+/g, '-')\n  .replace(/[^\\w-]+/g, '')\n  .replace(/--+/g, '-')\n\nexport function createProject({name, userId}: any) {\n  console.log(name);\n  return prisma.project.create({\n    data: {\n      name: name,\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n    },\n  });\n}\n\nexport function deleteProject({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & { userId: User[\"id\"] }) {\n  return prisma.note.deleteMany({\n    where: { id, userId },\n  });\n}\n", "import type { LoaderArgs } from \"@remix-run/node\"; // or cloudflare/deno\nimport { json } from \"@remix-run/node\"; // or cloudflare/deno\nimport { createClient } from '@supabase/supabase-js'\n// import { useSearchParams } from \"react-router-dom\";\nexport const loader = async ({ request }: LoaderArgs) => {\n  // handle \"GET\" request\n//   console.log(request.);\nconst url = new URL(request.url);\nconst field = url.searchParams.get(\"field\")||\"\"\nconst value = url.searchParams.get(\"value\")\nconsole.log(field, value);\n\n  const env = {\n    SUPABASE_URL_RAW: process.env.SUPABASE_URL_RAW!,\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY!,\n  }\n//   console.log(searchParams.get(\"id\"))\n  const supabase = createClient(env.SUPABASE_URL_RAW, env.SUPABASE_ANON_KEY)\n  \n  if (field?.length>0){\n    const { data, error } = await supabase\n    .from('Note')\n    .select()\n   \n    \n    console.log('data:', data);\n    return json(data, 200);\n  }else{\n    console.log(\"!!!!!!!!!!!!!!\");\n    \n    const { data, error } = await supabase\n    .from('Note')\n    .select('id')\n\n    console.log('data:', data);\n    console.log('error:', error);\n    return json(data, 200);\n  }\n  \n  \n  \n  \n};\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Remix Notes\" }];\n\nexport default function Index() {\n  const user = useOptionalUser(); \n  return (\n    <main className=\"bg-dark relative min-h-screen sm:flex sm:items-center sm:justify-center\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\"absolute inset-0\">\n              {/* <img\n                className=\"h-full w-full object-cover\"\n                src=\"https://user-images.githubusercontent.com/1500684/157774694-99820c51-8165-4908-a031-34fc371ac0d6.jpg\"\n                alt=\"Sonic Youth On Stage\"\n              /> */}\n              {/* <div className=\"absolute inset-0 bg-[color:rgba(254,204,27,0.5)] mix-blend-multiply\" /> */}\n            </div>\n            <div className=\"relative px-4 pb-8 pt-5 sm:px-6 sm:pb-14 sm:pt-24 lg:px-8 lg:pb-20 lg:pt-15\">\n              <h3 className=\"text-center text-4xl font-extrabold tracking-tight sm:text-4xl lg:text-4xl\">\n                <span className=\"block uppercase text-yellow-500 drop-shadow-md\">\n                  MW Notes2\n                </span>\n              </h3>\n              {/* <p className=\"mx-auto mt-6 max-w-lg text-center text-xl text-white sm:max-w-3xl\">\n                Check the README.md file for instructions on how to get this\n                project deployed.\n              </p> */}\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                {user ? (\n                  <Link\n                    to=\"/notes\"\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-yellow-700 shadow-sm hover:bg-yellow-50 sm:px-8\"\n                  >\n                    Notas de {user.email}\n                  </Link>\n                ) : (\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                    <Link\n                      to=\"/join\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-yellow-700 shadow-sm hover:bg-yellow-50 sm:px-8\"\n                    >\n                      Inscrever\n                    </Link>\n                    <Link\n                      to=\"/login\"\n                      className=\"flex items-center justify-center rounded-md bg-yellow-500 px-4 py-3 font-medium text-white hover:bg-yellow-600\"\n                    >\n                      Entrar\n                    </Link>\n                  </div>\n                )}\n              </div>\n              \n            </div>\n          </div>\n        </div>\n\n        {/* <div className=\"mx-auto max-w-7xl px-4 py-2 sm:px-6 lg:px-8\">\n          <div className=\"mt-6 flex flex-wrap justify-center gap-8\">\n            {[\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764397-ccd8ea10-b8aa-4772-a99b-35de937319e1.svg\",\n                alt: \"Fly.io\",\n                href: \"https://fly.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764395-137ec949-382c-43bd-a3c0-0cb8cb22e22d.svg\",\n                alt: \"SQLite\",\n                href: \"https://sqlite.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764484-ad64a21a-d7fb-47e3-8669-ec046da20c1f.svg\",\n                alt: \"Prisma\",\n                href: \"https://prisma.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764276-a516a239-e377-4a20-b44a-0ac7b65c8c14.svg\",\n                alt: \"Tailwind\",\n                href: \"https://tailwindcss.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764454-48ac8c71-a2a9-4b5e-b19c-edef8b8953d6.svg\",\n                alt: \"Cypress\",\n                href: \"https://www.cypress.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772386-75444196-0604-4340-af28-53b236faa182.svg\",\n                alt: \"MSW\",\n                href: \"https://mswjs.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772447-00fccdce-9d12-46a3-8bb4-fac612cdc949.svg\",\n                alt: \"Vitest\",\n                href: \"https://vitest.dev\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772662-92b0dd3a-453f-4d18-b8be-9fa6efde52cf.png\",\n                alt: \"Testing Library\",\n                href: \"https://testing-library.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772934-ce0a943d-e9d0-40f8-97f3-f464c0811643.svg\",\n                alt: \"Prettier\",\n                href: \"https://prettier.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772990-3968ff7c-b551-4c55-a25c-046a32709a8e.svg\",\n                alt: \"ESLint\",\n                href: \"https://eslint.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157773063-20a0ed64-b9f8-4e0b-9d1e-0b65a3d4a6db.svg\",\n                alt: \"TypeScript\",\n                href: \"https://typescriptlang.org\",\n              },\n            ].map((img) => (\n              <a\n                key={img.href}\n                href={img.href}\n                className=\"flex h-16 w-32 justify-center p-1 grayscale transition hover:grayscale-0 focus:grayscale-0\"\n              >\n                <img alt={img.alt} src={img.src} className=\"object-contain\" />\n              </a>\n            ))}\n          </div>\n        </div> */}\n      </div>\n    </main>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import { json } from '@remix-run/node' // change this import to whatever runtime you are using\nimport { createServerClient } from '@supabase/auth-helpers-remix'\n\nimport type { LoaderArgs } from '@remix-run/node' // change this import to whatever runtime you are using\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const response = new Response()\n  const supabaseClient = createServerClient(\n    process.env.SUPABASE_URL!,\n    process.env.SUPABASE_ANON_KEY!,\n    { request, response }\n  )\n\n  const { data } = await supabaseClient.from('test').select('*')\n\n  return json(\n    { data },\n    {\n      headers: response.headers,\n    }\n  )\n}", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport async function action({ request }: ActionArgs) {\n  return logout(request);\n}\n\nexport async function loader() {\n  return redirect(\"/\");\n}\n", "import { useState } from \"react\";\nimport { createClient } from '@supabase/supabase-js'\nimport { v4 as uuidv4 } from \"uuid\";\nexport const supabase = createClient('https://lpbqbqcmlspixeiikhcb.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxwYnFicWNtbHNwaXhlaWlraGNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODA2NDU1ODksImV4cCI6MTk5NjIyMTU4OX0.EIGOPYgY4iebJJ1jpJNCoioJZSE9XU83ZPWUhCsgUSk')\n\nexport default function Page() {\n  const [file, setfile] = useState([]);\n\n  const handleSubmit = async (e: any) => {\n        e.preventDefault();\n        const filename = `${uuidv4()}-${file.name}`;\n    \n        const { data, error } = await supabase.storage\n          .from(\"files\")\n          .upload(filename, file, {\n            cacheControl: \"3600\",\n            upsert: false,\n          });\n    \n        const filepath = data.path;\n        // save filepath in database\n  };\n\n  const handleFileSelected = (e) => {\n    setfile(e.target.files[0]);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" name=\"image\" onChange={handleFileSelected} />\n      <br/>\n      <button type=\"submit\">Upload image</button>\n    </form>\n  );\n}", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await getUserId(request);\n  console.log('-->userId:', userId);\n  \n  // if (userId) return redirect(\"/\");\n  return json({});\n}\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/notes\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Digite a senha\" } },\n      { status: 400 }\n    );\n  }\n\n  // if (password.length < 5) {\n  //   return json(\n  //     { errors: { email: null, password: \"Password is too short\" } },\n  //     { status: 400 }\n  //   );\n  // }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n      { errors: { email: \"Invalid email or password\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n}\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Login\" }];\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData<typeof action>();\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex mt-20 min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div className=\"flex w-full justify-center text-white\"><h3>Entrar</h3></div>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-white\"\n            >\n              Email\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-white\"\n            >\n              Senha\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Entrar\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-100\"\n              >\n                Lembrar\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Ainda n\u00E3o tem conta?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Registrar\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\nimport { useNavigate } from 'react-router-dom'\nimport {} from 'react-router-dom'\nimport { useEffect, useState } from \"react\";\nimport { Tree } from \"react-arborist\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  console.log(4, noteListItems);\n  return json( noteListItems );\n}\n\nexport default  function NotesPage() {\n  const navigate = useNavigate()\n  const data = useLoaderData<typeof loader>();\n  console.log('data:', data);\n  \n  const user = useUser();\n  const [showSideBar, setShowSideBar] = useState(true)\n  const [dataTree, setDataTree] = useState(data)\n \n  function Node({ node, style, dragHandle }) {\n    /* This node instance can do many things. See the API reference. */\n    return (\n      \n      <div style={style} ref={dragHandle}>\n        {node.isLeaf ? \"\" : \"\uD83D\uDDC0\"}\n        <a className=\"no-underline\" href={\"/notes/\" + node.data.id}>{node.data.title}</a>  \n      </div>\n     \n    );\n  }\n  \n  const data2 = [\n    { id: \"1\", name: \"Unread\", link: \"/notes\" },\n    { id: \"2\", name: \"Threads\" },\n    {\n      id: \"3\",\n      name: \"Chat Rooms\",\n      children: [\n        { id: \"c1\", name: \"General\" },\n        { id: \"c2\", name: \"Random\" },\n        { id: \"c3\", name: \"Open Source Projects\" },\n      ],\n    },\n    {\n      id: \"4\",\n      name: \"Direct Messages\",\n      children: [\n        { id: \"d1\", name: \"Alice\" },\n        { id: \"d2\", name: \"Bob\" },\n        { id: \"d3\", name: \"Charlie\" },\n      ],\n    },\n  ];\n\n  useEffect(() => {\n    setDataTree(data)\n    function handleResize() {\n      if (window.innerWidth<380) {\n        setShowSideBar(false) //console.log('resized to: ', window.innerWidth, 'x', window.innerHeight)\n      } \n    }\n    window.addEventListener('resize', handleResize)\n  })\n\n//   const folderNew = () => {\n//     let a = prompt(\"Nome da pasta\")\n//     folderNew(a)\n//  }\n  const handleToggleSideBar = () => {\n  //togglesidebar with useState\n  setShowSideBar(!showSideBar);\n  }\n  \n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex pt-6 items-center justify-between bg-slate-800 p-2 text-white no-underline\">\n        \n        <button onClick={()=>{handleToggleSideBar()}}> \n          <svg className=\"w-6 h-6\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path clipRule=\"evenodd\" fillRule=\"evenodd\" d=\"M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z\"></path>\n          </svg>\n        </button>\n        <h5 className=\"text-1xl font-sans\tpt-1 pl-2\">\n          <Link to=\".\" className=\"no-underline text-yellow-500\">MW Notes</Link>\n        </h5>\n        {user.id}\n        {/* <p className=\"pt-2 text-xs\">{user.email}</p> */}\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 px-4 py-1 text-blue-100 hover:bg-blue-500 active:bg-blue-600 text-xs\"\n          >\n            {user.email}\n          </button>\n        </Form>\n      </header>\n\n\n\n\n\n\n      <main className=\"flex h-full\">\n     \n     {showSideBar&&\n      <aside className=\" pl-5 w-[150px] py-3 \">\n          <div className=\"\">\n          <a href='/notes/new'><svg className=\"h-6 w-6 text-gray-400\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>  <path d=\"M14 3v4a1 1 0 0 0 1 1h4\" />  <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\" />  <line x1=\"12\" y1=\"11\" x2=\"12\" y2=\"17\" />  <line x1=\"9\" y1=\"14\" x2=\"15\" y2=\"14\" /></svg></a>\n          <Tree\n            initialData={dataTree}\n            openByDefault={true}\n            width={150}\n            height={1000}\n            indent={24}\n            rowHeight={25}\n            overscanCount={1}\n            paddingTop={20}\n            paddingBottom={5}\n            padding={10 /* sets both */}\n          >\n            {Node}\n          </Tree>\n          </div>\n      </aside>\n      }\n      {false&&\n      <aside id=\"default-sidebar\" className=\" top-0 left-0 z-40 w-80 h-screen \">\n        <div >\n\n        {/* <div className=\"inline-flex rounded-md shadow-sm h-15 mt-3 pl-3\" role=\"group\"> */}\n          <button onClick={() => navigate(\"/folderNew\")} type=\"button\" className=\"m-1 w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4  border-blue-700 rounded\">\n            + pasta\n          </button> <br/>\n          <button type=\"button\" onClick={() => navigate(\"new\")}  className=\"m-1 w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4  border-blue-700 rounded\">\n            + nota\n          </button>\n        {/* </div> */}\n        {/*     \n          <Link to=\"/folderNew\" className=\"no-underline block p-2 ml-7 text-base text-greew-300\">\n            + Nova pasta\n          </Link>\n          <Link to=\"new\" className=\"no-underline block p-2 ml-7 text-base text-greew-300\">\n            + Nova nota\n          </Link> */}\n          <br/><br/>\n          {/* <hr /> */}\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-2\">Nenhuma nota ainda</p>\n          ) : (\n            <ul>\n              {data.noteListItems.map((note, index) => {\n                // let a = note.folder\n                return (\n                <div key={note.id} >\n                  {/* {note.folder.name} */}\n                  {index==0&&<div className=\"text-slate-100\">{note.folder.name}</div>}\n                  {data.noteListItems[index==0?0:index-1].folder.id!==data.noteListItems[index].folder.id&&<div className=\"text-slate-100\">{note.folder.name}</div>}\n                  <ul className=\"flex space-x-1\">\n                  <li className=\"text-slate-300 \">\n                    <NavLink\n                      className={({ isActive }) =>\n                        `block no-underline p-1 text-base ${isActive ? \"text-green-400\" : \"text-slate-100\"}`\n                      }\n                      to={note.id}\n                    >\n                       {note.title}\n                    </NavLink>\n                  </li>\n                  </ul>\n                </div>\n              )})}\n            </ul>\n          )}\n        </div>\n      </aside>\n      }\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { createProject } from \"~/models/project.server\";\n\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await getUserId(request);\n  // if (userId) return redirect(\"/\");\n  return json({});\n}\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 5) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n  // await createProject('main', user.id)\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n}\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sign Up\" }];\n\nexport default function Join() {\n  \n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto pt-20 w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div className=\"flex w-full justify-center text-white\"><h3>Registrar</h3></div>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-white\"\n            >\n              Email\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-white\"\n            >\n              Senha\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Registrar\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              J\u00E1 tem uma conta?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Entrar\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "export default {'version':'c5fb94d0','entry':{'module':'/build/entry.client-BCJNULHS.js','imports':['/build/_shared/chunk-56KUAJVK.js','/build/_shared/chunk-OWPABCHM.js','/build/_shared/chunk-3QIN6FEG.js','/build/_shared/chunk-DF3EUDCN.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-MODFOBSP.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-Y2LYZVNS.js','imports':['/build/_shared/chunk-QCJELAVJ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.$userid.note.$noteid.show':{'id':'routes/api.$userid.note.$noteid.show','parentId':'root','path':'api/:userid/note/:noteid/show','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.$userid.note.$noteid.show-VT662FPS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/folderNew':{'id':'routes/folderNew','parentId':'root','path':'folderNew','index':undefined,'caseSensitive':undefined,'module':'/build/routes/folderNew-GW63X2W6.js','imports':['/build/_shared/chunk-BOCVWV7G.js','/build/_shared/chunk-UUXYXIFE.js','/build/_shared/chunk-UHWRWWT5.js','/build/_shared/chunk-MZ4QRB3L.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-A5E2ZC62.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/imagemanager':{'id':'routes/imagemanager','parentId':'root','path':'imagemanager','index':undefined,'caseSensitive':undefined,'module':'/build/routes/imagemanager-NXKOSJUZ.js','imports':['/build/_shared/chunk-BPFDCX7X.js','/build/_shared/chunk-OXVWDGG7.js','/build/_shared/chunk-UHWRWWT5.js','/build/_shared/chunk-MZ4QRB3L.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-J3BFVYP5.js','imports':['/build/_shared/chunk-MMIEBQCH.js','/build/_shared/chunk-QCJELAVJ.js','/build/_shared/chunk-UUXYXIFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-KOTQKVRQ.js','imports':['/build/_shared/chunk-MMIEBQCH.js','/build/_shared/chunk-QCJELAVJ.js','/build/_shared/chunk-UUXYXIFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login2':{'id':'routes/login2','parentId':'root','path':'login2','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login2-WNLYJV2F.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-CG5UQZAS.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-BHLD2M34.js','imports':['/build/_shared/chunk-QCJELAVJ.js','/build/_shared/chunk-BOCVWV7G.js','/build/_shared/chunk-UUXYXIFE.js','/build/_shared/chunk-BPFDCX7X.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.$noteId':{'id':'routes/notes.$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes.$noteId-EUPXCMFH.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/notes._index':{'id':'routes/notes._index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/notes._index-V4QCG5MN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.edit.$noteId':{'id':'routes/notes.edit.$noteId','parentId':'routes/notes','path':'edit/:noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes.edit.$noteId-4GEH2YRQ.js','imports':['/build/_shared/chunk-OXVWDGG7.js','/build/_shared/chunk-UHWRWWT5.js','/build/_shared/chunk-MZ4QRB3L.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.new':{'id':'routes/notes.new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes.new-ELU2B3MI.js','imports':['/build/_shared/chunk-UHWRWWT5.js','/build/_shared/chunk-MZ4QRB3L.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/projects':{'id':'routes/projects','parentId':'root','path':'projects','index':undefined,'caseSensitive':undefined,'module':'/build/routes/projects-IYC5EABB.js','imports':['/build/_shared/chunk-UUXYXIFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/showRes':{'id':'routes/showRes','parentId':'root','path':'showRes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/showRes-LDO4O2MS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/upload':{'id':'routes/upload','parentId':'root','path':'upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/upload-JMLNS53R.js','imports':['/build/_shared/chunk-OXVWDGG7.js','/build/_shared/chunk-UHWRWWT5.js','/build/_shared/chunk-MZ4QRB3L.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-C5FB94D0.js'};", "\nimport * as entryServer from \"/home/magaweb/desenv/remix/mwnotes/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/api.$userid.note.$noteid.show.tsx\";\nimport * as route2 from \"./routes/notes.edit.$noteId.tsx\";\nimport * as route3 from \"./routes/notes.$noteId.tsx\";\nimport * as route4 from \"./routes/imagemanager.tsx\";\nimport * as route5 from \"./routes/notes._index.tsx\";\nimport * as route6 from \"./routes/healthcheck.tsx\";\nimport * as route7 from \"./routes/folderNew.tsx\";\nimport * as route8 from \"./routes/notes.new.tsx\";\nimport * as route9 from \"./routes/projects.tsx\";\nimport * as route10 from \"./routes/showRes.tsx\";\nimport * as route11 from \"./routes/_index.tsx\";\nimport * as route12 from \"./routes/login2.tsx\";\nimport * as route13 from \"./routes/logout.tsx\";\nimport * as route14 from \"./routes/upload.tsx\";\nimport * as route15 from \"./routes/login.tsx\";\nimport * as route16 from \"./routes/notes.tsx\";\nimport * as route17 from \"./routes/join.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":true,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api.$userid.note.$noteid.show\": {\n      id: \"routes/api.$userid.note.$noteid.show\",\n      parentId: \"root\",\n      path: \"api/:userid/note/:noteid/show\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/notes.edit.$noteId\": {\n      id: \"routes/notes.edit.$noteId\",\n      parentId: \"routes/notes\",\n      path: \"edit/:noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/notes.$noteId\": {\n      id: \"routes/notes.$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/imagemanager\": {\n      id: \"routes/imagemanager\",\n      parentId: \"root\",\n      path: \"imagemanager\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/notes._index\": {\n      id: \"routes/notes._index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/folderNew\": {\n      id: \"routes/folderNew\",\n      parentId: \"root\",\n      path: \"folderNew\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes.new\": {\n      id: \"routes/notes.new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/projects\": {\n      id: \"routes/projects\",\n      parentId: \"root\",\n      path: \"projects\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/showRes\": {\n      id: \"routes/showRes\",\n      parentId: \"root\",\n      path: \"showRes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/login2\": {\n      id: \"routes/login2\",\n      parentId: \"root\",\n      path: \"login2\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/upload\": {\n      id: \"routes/upload\",\n      parentId: \"root\",\n      path: \"upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "bcrypt", "data", "data2", "bcrypt", "invariant", "import_jsx_dev_runtime", "loader", "import_client", "prisma", "loader", "supabase", "import_node", "import_react", "import_react", "import_supabase_js", "import_jsx_dev_runtime", "supabase", "loader", "data", "_a", "_b", "_c", "_d", "uuidv4", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_react", "import_jsx_dev_runtime", "loader", "invariant", "action", "data", "loader", "import_react", "import_Button", "import_supabase_js", "import_node", "import_uuid", "import_server_runtime", "import_jsx_dev_runtime", "Modal", "Button", "import_react", "import_jsx_dev_runtime", "loader", "data", "React", "supabase", "uuidv4", "_a", "Button", "import_react", "import_jsx_dev_runtime", "loader", "loader", "action", "supabase", "import_node", "import_react", "React", "import_supabase_js", "import_jsx_dev_runtime", "supabase", "action", "action", "NewNotePage", "loader", "supabase", "import_node", "import_react", "React", "import_react_router_dom", "import_react", "import_supabase_js", "import_jsx_dev_runtime", "supabase", "loader", "action", "NewNotePage", "data", "_a", "_b", "_c", "_d", "action", "loader", "import_node", "import_react", "React", "adicionaZero", "dataAtual", "dataAtualFormatada", "import_react", "import_jsx_dev_runtime", "loader", "data", "action", "loader", "import_node", "import_supabase_js", "supabase", "data", "import_react", "import_react", "route", "data", "import_jsx_dev_runtime", "loader", "import_node", "data", "action", "loader", "import_node", "action", "loader", "supabase", "import_react", "import_supabase_js", "import_uuid", "import_jsx_dev_runtime", "uuidv4", "data", "action", "loader", "meta", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "loader", "import_node", "import_react", "import_react_router_dom", "import_react", "import_jsx_dev_runtime", "loader", "data", "data2", "action", "loader", "meta", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d"]
}
